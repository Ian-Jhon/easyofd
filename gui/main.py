# Form implementation generated from reading ui file 'main.ui'
#
# Created by: PyQt6 UI code generator 6.4.2
#
# WARNING: Any manual changes made to this file will be lost when pyuic6 is
# run again.  Do not edit this file unless you know what you are doing.

import sys,os,base64
from PIL import Image
from PyQt6.QtWidgets import QApplication, QWidget, QMainWindow, QDialog,QMessageBox
from PyQt6 import QtCore, QtGui, QtWidgets
from easyofd import OFD

class Ui_MainWindow(object):
    def __init__(self):
        self.ofd = OFD()
        
    def read_ofd(self,path):
        with open(path,"rb") as f:
            ofdb64 = str(base64.b64encode(f.read()),"utf-8")
        return ofdb64
    
    def read_pfd(self,path):
        with open(path,"rb") as f:
           base64.b64encode(f.read()),"utf-8"
        return pfd_byte
    
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(744, 463)
        self.centralwidget = QtWidgets.QWidget(parent=MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.gridLayoutWidget = QtWidgets.QWidget(parent=self.centralwidget)
        self.gridLayoutWidget.setGeometry(QtCore.QRect(0, 0, 2, 2))
        self.gridLayoutWidget.setObjectName("gridLayoutWidget")
        self.gridLayout = QtWidgets.QGridLayout(self.gridLayoutWidget)
        self.gridLayout.setContentsMargins(0, 0, 0, 0)
        self.gridLayout.setObjectName("gridLayout")
        self.pushButton = QtWidgets.QPushButton(parent=self.centralwidget)
        self.pushButton.setGeometry(QtCore.QRect(20, 320, 161, 41))
        self.pushButton.setObjectName("pushButton")
        self.textEdit = QtWidgets.QTextEdit(parent=self.centralwidget)
        self.textEdit.setGeometry(QtCore.QRect(120, 180, 461, 51))
        self.textEdit.setObjectName("textEdit")
        self.textEdit_2 = QtWidgets.QTextEdit(parent=self.centralwidget)
        self.textEdit_2.setGeometry(QtCore.QRect(120, 250, 461, 51))
        self.textEdit_2.setObjectName("textEdit_2")
        # 单选框
        self.radioButton = QtWidgets.QRadioButton(parent=self.centralwidget)
        self.radioButton.setGeometry(QtCore.QRect(40, 50, 95, 20))
        self.radioButton.setObjectName("radioButton")
        self.radioButton_2 = QtWidgets.QRadioButton(parent=self.centralwidget)
        self.radioButton_2.setGeometry(QtCore.QRect(170, 50, 95, 20))
        self.radioButton_2.setObjectName("radioButton_2")
        self.radioButton_3 = QtWidgets.QRadioButton(parent=self.centralwidget)
        self.radioButton_3.setGeometry(QtCore.QRect(40, 90, 95, 20))
        self.radioButton_3.setObjectName("radioButton_3")
        self.radioButton_4 = QtWidgets.QRadioButton(parent=self.centralwidget)
        self.radioButton_4.setGeometry(QtCore.QRect(170, 90, 95, 20))
        self.radioButton_4.setObjectName("radioButton_4")
        
        self.label = QtWidgets.QLabel(parent=self.centralwidget)
        self.label.setGeometry(QtCore.QRect(30, 20, 54, 16))
        self.label.setObjectName("label")
        self.label_2 = QtWidgets.QLabel(parent=self.centralwidget)
        self.label_2.setGeometry(QtCore.QRect(20, 140, 54, 16))
        self.label_2.setObjectName("label_2")
        self.label_3 = QtWidgets.QLabel(parent=self.centralwidget)
        self.label_3.setGeometry(QtCore.QRect(40, 200, 54, 16))
        self.label_3.setObjectName("label_3")
        self.label_4 = QtWidgets.QLabel(parent=self.centralwidget)
        self.label_4.setGeometry(QtCore.QRect(40, 270, 54, 16))
        self.label_4.setObjectName("label_4")
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(parent=MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 744, 22))
        self.menubar.setObjectName("menubar")
        self.mebnu_2 = QtWidgets.QMenu(parent=self.menubar)
        self.mebnu_2.setObjectName("mebnu_2")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(parent=MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)
        # 单选框
        self.actionpdf2ofd = QtGui.QAction(parent=MainWindow)
        self.actionpdf2ofd.setObjectName("actionpdf2ofd")
        self.actionpdf2ofd.setCheckable(True)
        self.actionpdf2ofd.triggered.connect(self.action_triggered)
        
        self.actionpfd2img = QtGui.QAction(parent=MainWindow)
        self.actionpfd2img.setObjectName("actionpfd2img")
        self.actionpfd2img.setCheckable(True)
        
        self.actionofd2pfd = QtGui.QAction(parent=MainWindow)
        self.actionofd2pfd.setObjectName("actionofd2pfd")
        self.actionofd2pfd.setCheckable(True)
        
        self.actionofd2img = QtGui.QAction(parent=MainWindow)
        self.actionofd2img.setObjectName("actionofd2img")
        self.actionofd2img.setCheckable(True)
        
        self.menubar.addAction(self.mebnu_2.menuAction())
        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)
    
    def action_triggered(self,actionpdf2ofd):
        if self.actionpdf2ofd.isChecked():
            print("Action is checked!")
        else:
            print("Action is unchecked!")
            
    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.pushButton.setText(_translate("MainWindow", "开始"))
        
        self.radioButton.setText(_translate("MainWindow", "ofd2pdf"))
        self.radioButton_2.setText(_translate("MainWindow", "ofd2img"))
        self.radioButton_3.setText(_translate("MainWindow", "pdf2ofd"))
        self.radioButton_4.setText(_translate("MainWindow", "pdf2img"))
        
        self.label.setText(_translate("MainWindow", "选择模式"))
        self.label_2.setText(_translate("MainWindow", "文件路径"))
        self.label_3.setText(_translate("MainWindow", "输入路径"))
        self.textEdit.setText(_translate("MainWindow", ""))
        self.label_4.setText(_translate("MainWindow", "输出路径"))
        self.textEdit_2.setText(_translate("MainWindow", ""))
        self.mebnu_2.setTitle(_translate("MainWindow", "说明"))
        self.actionpdf2ofd.setText(_translate("MainWindow", "pdf2ofd"))
        self.actionpfd2img.setText(_translate("MainWindow", "pfd2img"))
        self.actionofd2pfd.setText(_translate("MainWindow", "ofd2pfd"))
        self.actionofd2img.setText(_translate("MainWindow", "ofd2img"))

        # 点击事件
        self.pushButton.clicked.connect(self.buttonClicked)
        
    def showDialog(self,msg:str):  
        # QMessageBox.warning(self, 'Alert', msg, QMessageBox.Ok())  
        msgBox = QMessageBox()  
        msgBox.setText(msg)  
        msgBox.exec()
    
    def check_file(self,name,endswith:str):
        if name.lower().endswith(endswith):
            return True
    
    def save_file(self,name,bytes):
        with open(name,"wb") as f:
            f.write(bytes)
            
    def save_img(self,name,img_np):
        for inx,img in enumerate(img_np):
            im = Image.fromarray(img)
            im.save(name.format(inx))
            
    def run_convert(self,mode,input,output):
        inputs= os.listdir(input)

        for file in inputs:
            if mode == "ofd2pdf":
                if self.check_file(file,"ofd"):
                    
                    ofdb64 = self.read_ofd(os.path.join(input,file))
                    self.ofd.read(ofdb64)
                    pdf_bytes = self.ofd.to_pdf()
                    self.save_file(os.path.join(output,os.path.splitext(file)[0]+".pdf"), pdf_bytes)
            elif mode == "ofd2img":  
                if self.check_file(file,"ofd"):
                    ofdb64 = self.read_ofd(os.path.join(input,file))
                    self.ofd.read(ofdb64)
                    img_np = self.ofd.to_jpg()
                    self.save_img(os.path.join(output,os.path.splitext(file)[0]+"_{}"+".jpg"), img_np)
            elif mode == "pdf2ofd":
                if self.check_file(file,"pfd"):
                    pfdbyte = self.read_pfd(os.path.join(input,file))
                    ofd_byte = self.ofd.pdf2ofd(pfdbyte)
                    self.save_file(os.path.join(output,os.path.splitext(file)[0]+".ofd"), ofd_byte)
            elif mode == "pdf2img":
                if self.check_file(file,"pfd"):
                    pfdbyte = self.read_pfd(os.path.join(input,file))
                    img_np = self.ofd.pdf2img(pfdbyte)
                    self.save_file(os.path.join(output,os.path.splitext(file)[0]+"_{}"+".jpg"), img_np)
                    
            self.ofd.del_data()
                
       
            
                
        
                   
    def buttonClicked(self):
        """
        执行事件
        """
        # sender = self.sender()
        input_path = self.textEdit.toPlainText()
        output_path = self.textEdit_2.toPlainText()
        self.actionpdf2ofd 
        print("Input path: " + input_path)
        print("onput path: " + output_path)
        
        if not os.path.exists(input_path) or not os.path.exists(output_path):
            
           
            self.showDialog(f"输入路径{input_path} \n或 输出路径{output_path}\n 不存在，请检查。 ")
            
      
        # ofd2pdf ofd2img pdf2ofd pdf2img
        mode = [self.radioButton.isChecked(),self.radioButton_2.isChecked(),self.radioButton_3.isChecked(),self.radioButton_4.isChecked()]
        print(mode)
        if mode[0]:
            # TODO ofd2pdf
            print("ofd2pdf")
            self.run_convert("ofd2pdf",input_path,output_path)
        elif mode[1]:
            print("ofd2img")
            self.run_convert("ofd2img",input_path,output_path)
        elif mode[2]:
            print("pdf2ofd")
            self.run_convert("pdf2ofd",input_path,output_path)
        elif mode[3]:
            print("pdf2img")
            self.run_convert("pdf2img",input_path,output_path)
        # msg = f'{sender.text()} was pressed'
        # self.statusBar().showMessage(msg)
        

if __name__ == "__main__":
    
    # 一、应用程序对象，只能有一个
    # 1、该类管理GUI应用程序控制流和主要设置，专门用于QWidget所需的一些功能
    # 2、不使用命令行或提示符程序（cmd），则为空列表 []
    # 3、如果使用命令行或提示符程序(cmd)，则为sys.argv

    app = QApplication(sys.argv)
    
    # 二、从窗口类型中可以创建三种窗口对象
    # 1、QWidget
    # 2、QMainWindow
    # 3、QDialog
    window = QMainWindow()
    # 三、QWidget显示窗口
    ui_ =Ui_MainWindow()
    ui_.setupUi(window)
 
    window.show()
    
    # 四、执行程序
    sys.exit(app.exec())